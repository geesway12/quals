var app=new Framework7({el:"#app",name:"QualiData",id:"com.qualidata.fieldresearch",theme:"auto",input:{scrollIntoViewOnFocus:Framework7.device.cordova&&!Framework7.device.electron,scrollIntoViewCentered:Framework7.device.cordova&&!Framework7.device.electron},statusbar:{iosOverlaysWebView:!0,androidOverlaysWebView:!1},view:{pushState:!0,pushStateRoot:void 0},routes:[{path:"/",url:"./index.html"},{path:"/screening-tracker/",url:"./screening-tracker.html"},{path:"/interview/",url:"./interview.html"},{path:"/focus-group-discussion/",url:"./focus-group-discussion.html"},{path:"/reflexive-journal/",url:"./reflexive-journal.html"},{path:"/guiding-information/",url:"./guiding-information.html"}],serviceWorker:{path:"/service-worker.js"}}),mainView=app.views.create(".view-main",{url:"/"});class DataManager{constructor(){this.storagePrefix="qualidata_",this.init()}init(){localStorage.getItem(this.storagePrefix+"initialized")||(localStorage.setItem(this.storagePrefix+"initialized","true"),localStorage.setItem(this.storagePrefix+"participants",JSON.stringify([])),localStorage.setItem(this.storagePrefix+"interviews",JSON.stringify([])),localStorage.setItem(this.storagePrefix+"audio_files",JSON.stringify([])),localStorage.setItem(this.storagePrefix+"field_logs",JSON.stringify([])),localStorage.setItem(this.storagePrefix+"screening_logs",JSON.stringify([])),localStorage.setItem(this.storagePrefix+"consent_logs",JSON.stringify([])))}saveParticipant(e){const t=this.getParticipants(),i={id:this.generateParticipantId(e),...e,dateCreated:(new Date).toISOString(),status:"active"};return t.push(i),localStorage.setItem(this.storagePrefix+"participants",JSON.stringify(t)),i}getParticipants(){return JSON.parse(localStorage.getItem(this.storagePrefix+"participants")||"[]")}generateParticipantId(e){const t=this.getParticipantPrefix(e.stakeholderType),i=this.getParticipants().filter(e=>e.id.startsWith(t)).map(e=>parseInt(e.id.split("_")[1])||0),n=Math.max(0,...i)+1;return`${t}_${n.toString().padStart(3,"0")}`}getParticipantPrefix(e){return{patients:"PAT",clinicians:"CLN",herbalists:"HRB","policy-stakeholders":"POL"}[e]||"UNK"}saveInterview(e){const t=this.getInterviews(),i={id:this.generateId("INT"),...e,dateCreated:(new Date).toISOString()};return t.push(i),localStorage.setItem(this.storagePrefix+"interviews",JSON.stringify(t)),i}getInterviews(){return JSON.parse(localStorage.getItem(this.storagePrefix+"interviews")||"[]")}saveAudioFile(e){const t=this.getAudioFiles(),i={id:this.generateId("AUD"),...e,dateCreated:(new Date).toISOString()};return t.push(i),localStorage.setItem(this.storagePrefix+"audio_files",JSON.stringify(t)),i}getAudioFiles(){return JSON.parse(localStorage.getItem(this.storagePrefix+"audio_files")||"[]")}saveFieldLog(e){const t=this.getFieldLogs(),i={id:this.generateId("LOG"),...e,dateCreated:(new Date).toISOString()};return t.push(i),localStorage.setItem(this.storagePrefix+"field_logs",JSON.stringify(t)),i}getFieldLogs(){return JSON.parse(localStorage.getItem(this.storagePrefix+"field_logs")||"[]")}generateId(e){return`${e}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}exportData(e){const t={participants:this.getParticipants(),interviews:this.getInterviews(),audioFiles:this.getAudioFiles(),fieldLogs:this.getFieldLogs(),screeningLogs:this.getScreeningLogs(),consentLogs:this.getConsentLogs(),analytics:this.getScreeningAnalytics(),exportDate:(new Date).toISOString()};return"json"===e?this.downloadJSON("qualidata_export.json",t):"csv"===e?this.exportCSV(t):void 0}downloadJSON(e,t){const i=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),n=URL.createObjectURL(i),a=document.createElement("a");a.href=n,a.download=e,a.click(),URL.revokeObjectURL(n)}downloadCSV(e,t,i){const n=[i.join(",")].concat(t.map(e=>i.map(t=>`"${(e[t]||"").toString().replace(/"/g,'""')}"`).join(","))).join("\n"),a=new Blob([n],{type:"text/csv"}),o=URL.createObjectURL(a),r=document.createElement("a");r.href=o,r.download=e,r.click(),URL.revokeObjectURL(o)}exportCSV(e){if(e.participants&&e.participants.length>0){const t=["id","stakeholderType","district","facility","raInitials","dateCreated","status"];this.downloadCSV("participants.csv",e.participants,t)}if(e.interviews&&e.interviews.length>0){const t=["id","participantId","interviewType","notes","dateCreated"];this.downloadCSV("interviews.csv",e.interviews,t)}if(e.fieldLogs&&e.fieldLogs.length>0){const t=["id","district","raInitials","observations","challenges","issues","dateCreated"];this.downloadCSV("field_logs.csv",e.fieldLogs,t)}if(e.screeningLogs&&e.screeningLogs.length>0){const t=["id","stakeholderType","location","researchAssistant","contactMethod","status","dateCreated"];this.downloadCSV("screening_logs.csv",e.screeningLogs,t)}if(e.consentLogs&&e.consentLogs.length>0){const t=["id","participantId","consentDate","consentMethod","audioRecorded","dataUseAgreed","dateCreated"];this.downloadCSV("consent_logs.csv",e.consentLogs,t)}if(e.audioFiles&&e.audioFiles.length>0){const t=["id","fileName","participantId","sessionType","duration","fileSize","dateCreated"];this.downloadCSV("audio_files.csv",e.audioFiles,t)}}getStats(){const e=this.getScreeningAnalytics();return{totalParticipants:this.getParticipants().length,totalInterviews:this.getInterviews().length,totalAudio:this.getAudioFiles().length,totalLogs:this.getFieldLogs().length,totalScreenings:this.getScreeningLogs().length,totalConsents:this.getConsentLogs().length,totalContacts:e.contacted,eligibleParticipants:e.eligible,consentedParticipants:e.consented,enrolledParticipants:this.getParticipants().length,totalSessions:this.getInterviews().length+this.getFieldLogs().length,conversionRate:e.conversionRate,eligibilityRate:e.eligibilityRate}}getStatistics(){return this.getStats()}getAllParticipants(){return this.getParticipants()}logScreeningAttempt(e){const t=this.getScreeningLogs(),i={id:this.generateId("SCR"),stakeholderType:e.stakeholderType,location:e.location,researchAssistant:e.researchAssistant,contactMethod:e.contactMethod,contactDetails:e.contactDetails,approachDate:(new Date).toISOString(),status:"contacted",eligibilityChecks:[],notes:e.notes||"",dateCreated:(new Date).toISOString()};return t.push(i),localStorage.setItem(this.storagePrefix+"screening_logs",JSON.stringify(t)),i}updateScreeningStatus(e,t,i=[],n=""){const a=this.getScreeningLogs(),o=a.findIndex(t=>t.id===e);return-1!==o?(a[o].status=t,a[o].eligibilityChecks=i,a[o].screeningDate=(new Date).toISOString(),a[o].notes=n,localStorage.setItem(this.storagePrefix+"screening_logs",JSON.stringify(a)),a[o]):null}getScreeningLogs(){return JSON.parse(localStorage.getItem(this.storagePrefix+"screening_logs")||"[]")}logConsentProcess(e){const t=this.getConsentLogs(),i={id:this.generateId("CON"),screeningId:e.screeningId,participantId:e.participantId,consentDate:(new Date).toISOString(),consentMethod:e.consentMethod,witnessName:e.witnessName||"",witnessSignature:e.witnessSignature||"",participantSignature:e.participantSignature||"",consentFormVersion:e.consentFormVersion||"1.0",audioRecorded:e.audioRecorded||!1,dataUseAgreed:e.dataUseAgreed||!1,withdrawalExplained:e.withdrawalExplained||!1,contactForResults:e.contactForResults||!1,notes:e.notes||"",dateCreated:(new Date).toISOString()};return t.push(i),localStorage.setItem(this.storagePrefix+"consent_logs",JSON.stringify(t)),i}getConsentLogs(){return JSON.parse(localStorage.getItem(this.storagePrefix+"consent_logs")||"[]")}saveParticipantFromScreening(e,t,i){const n=this.saveParticipant(t);this.updateScreeningStatus(e,"consented",[],"Participant enrolled and consented");const a=this.logConsentProcess({screeningId:e,participantId:n.id,...i});n.consentLogId=a.id,n.screeningLogId=e;const o=this.getParticipants(),r=o.findIndex(e=>e.id===n.id);return-1!==r&&(o[r]=n,localStorage.setItem(this.storagePrefix+"participants",JSON.stringify(o))),{participant:n,consentLog:a}}getScreeningAnalytics(){const e=this.getScreeningLogs(),t=e.length,i={},n={};return e.forEach(e=>{i[e.status]=(i[e.status]||0)+1,n[e.stakeholderType]=(n[e.stakeholderType]||0)+1}),{total:t,contacted:i.contacted||0,screened:i.screened||0,eligible:i.eligible||0,ineligible:i.ineligible||0,declined:i.declined||0,consented:i.consented||0,conversionRate:t>0?((i.consented||0)/t*100).toFixed(1):0,eligibilityRate:t>0?((i.eligible||0)/t*100).toFixed(1):0,byStakeholder:n}}saveScreening(e){const t=this.getScreenings();return t.push(e),localStorage.setItem(this.storagePrefix+"screenings",JSON.stringify(t)),e}getScreenings(){const e=localStorage.getItem(this.storagePrefix+"screenings");return e?JSON.parse(e):[]}getScreeningsByType(e){return this.getScreenings().filter(t=>t.type===e)}saveTrackedParticipant(e){const t=this.getTrackedParticipants(),i=t.findIndex(t=>t.id===e.id);return-1!==i?t[i]=e:t.push(e),localStorage.setItem(this.storagePrefix+"tracked_participants",JSON.stringify(t)),e}getTrackedParticipants(e=null){const t=localStorage.getItem(this.storagePrefix+"tracked_participants"),i=t?JSON.parse(t):[];return e?i.filter(t=>t.type===e+"-tracker"):i}deleteTrackedParticipant(e){const t=this.getTrackedParticipants().filter(t=>t.id!==e);return localStorage.setItem(this.storagePrefix+"tracked_participants",JSON.stringify(t)),!0}saveInterviewData(e){const t=this.getInterviews();return t.push(e),localStorage.setItem(this.storagePrefix+"interviews",JSON.stringify(t)),e}getInterviews(){const e=localStorage.getItem(this.storagePrefix+"interviews");return e?JSON.parse(e):[]}saveFGDData(e){const t=this.getFGDs();return t.push(e),localStorage.setItem(this.storagePrefix+"fgds",JSON.stringify(t)),e}getFGDs(){const e=localStorage.getItem(this.storagePrefix+"fgds");return e?JSON.parse(e):[]}saveAudioLog(e){const t=this.getAudioLogs();return t.push(e),localStorage.setItem(this.storagePrefix+"audio_logs",JSON.stringify(t)),e}getAudioLogs(){const e=localStorage.getItem(this.storagePrefix+"audio_logs");return e?JSON.parse(e):[]}saveTranscription(e){const t=this.getTranscriptions();return t.push(e),localStorage.setItem(this.storagePrefix+"transcriptions",JSON.stringify(t)),e}getTranscriptions(){const e=localStorage.getItem(this.storagePrefix+"transcriptions");return e?JSON.parse(e):[]}saveFieldNote(e){const t=this.getFieldNotes();return t.push(e),localStorage.setItem(this.storagePrefix+"field_notes",JSON.stringify(t)),e}getFieldNotes(){const e=localStorage.getItem(this.storagePrefix+"field_notes");return e?JSON.parse(e):[]}getRecruitmentStatistics(){const e=this.getScreenings(),t=this.getTrackedParticipants(),i=e.filter(e=>"patient-eligibility"===e.type),n=e.filter(e=>"clinician-eligibility"===e.type),a=e.filter(e=>"herbalist-eligibility"===e.type),o=e.filter(e=>"policy-eligibility"===e.type),r=t.filter(e=>"patient-tracker"===e.type),s=t.filter(e=>"clinician-tracker"===e.type),l=t.filter(e=>"herbalist-tracker"===e.type),c=t.filter(e=>"policy-tracker"===e.type),d=i.filter(e=>e.isEligible).length,g=n.filter(e=>e.isEligible).length,p=a.filter(e=>e.isEligible).length,u=o.filter(e=>e.isEligible).length,h=r.filter(e=>"enrolled"===e.status).length,w=s.filter(e=>"enrolled"===e.status).length,m=l.filter(e=>"enrolled"===e.status).length,S=c.filter(e=>"enrolled"===e.status).length,v=(new Date).toISOString().split("T")[0],f=e.filter(e=>e.screeningDate===v).length;return{totalScreenings:e.length,eligibleParticipants:d+g+p+u,enrolledParticipants:h+w+m+S,todayScreenings:f,patientScreenings:i.length,clinicianScreenings:n.length,herbalistScreenings:a.length,policyScreenings:o.length,eligiblePatients:d,eligibleClinicians:g,eligibleHerbalists:p,eligiblePolicy:u,trackedPatients:r.length,trackedClinicians:s.length,trackedHerbalists:l.length,trackedPolicy:c.length,enrolledPatients:h,enrolledClinicians:w,enrolledHerbalists:m,enrolledPolicy:S}}}class AudioRecorder{constructor(){this.mediaRecorder=null,this.audioChunks=[],this.isRecording=!1,this.stream=null}async startRecording(){try{return this.stream=await navigator.mediaDevices.getUserMedia({audio:!0}),this.mediaRecorder=new MediaRecorder(this.stream),this.audioChunks=[],this.mediaRecorder.ondataavailable=e=>{this.audioChunks.push(e.data)},this.mediaRecorder.onstop=()=>{const e=new Blob(this.audioChunks,{type:"audio/webm"});this.onRecordingComplete(e)},this.mediaRecorder.start(),this.isRecording=!0,!0}catch(e){return console.error("Error starting recording:",e),!1}}stopRecording(){this.mediaRecorder&&this.isRecording&&(this.mediaRecorder.stop(),this.isRecording=!1,this.stream&&this.stream.getTracks().forEach(e=>e.stop()))}onRecordingComplete(e){console.log("Recording completed:",e)}}const dataManager=new DataManager,audioRecorder=new AudioRecorder;function updateStats(){const e=dataManager.getStats(),t=dataManager.getScreeningAnalytics(),i=document.getElementById("totalParticipants"),n=document.getElementById("totalScreenings"),a=document.getElementById("totalInterviews"),o=document.getElementById("totalAudio"),r=document.getElementById("conversionRate"),s=document.getElementById("eligibilityRate");i&&(i.textContent=e.totalParticipants),n&&(n.textContent=e.totalScreenings),a&&(a.textContent=e.totalInterviews),o&&(o.textContent=e.totalAudio),r&&(r.textContent=t.conversionRate+"%"),s&&(s.textContent=t.eligibilityRate+"%")}function updateHeroStats(){try{const e=dataManager.getStatistics(),t=document.getElementById("heroTotalParticipants"),i=document.getElementById("heroTotalInterviews"),n=document.getElementById("heroConversionRate");t&&(t.textContent=e.totalParticipants),i&&(i.textContent=e.totalInterviews),n&&(n.textContent=e.conversionRate+"%");const a=document.getElementById("conversionRateCircle"),o=document.getElementById("eligibilityRateCircle");a&&(a.textContent=e.conversionRate+"%"),o&&(o.textContent=e.eligibilityRate+"%")}catch(e){console.warn("Error updating hero stats:",e)}}function updateStatistics(){try{const e=dataManager.getStatistics(),t={totalParticipants:e.totalParticipants,totalInterviews:e.totalInterviews,totalSessions:e.totalSessions,totalContacts:e.totalContacts,eligibleParticipants:e.eligibleParticipants,consentedParticipants:e.consentedParticipants,enrolledParticipants:e.enrolledParticipants,conversionRate:e.conversionRate+"%",eligibilityRate:e.eligibilityRate+"%",totalScreenings:e.totalContacts,totalAudio:0};Object.entries(t).forEach(([e,t])=>{const i=document.getElementById(e);i&&(i.textContent=t)}),updateHeroStats(),console.log("Statistics updated:",e)}catch(e){console.error("Error updating statistics:",e)}}function showScreeningStats(){const e=dataManager.getStatistics(),t=`\nScreening Statistics:\n• Total Contacts: ${e.totalContacts}\n• Eligible Participants: ${e.eligibleParticipants}\n• Consented Participants: ${e.consentedParticipants}\n• Enrolled Participants: ${e.enrolledParticipants}\n• Conversion Rate: ${e.conversionRate}%\n• Eligibility Rate: ${e.eligibilityRate}%\n  `;app.dialog.alert(t,"Screening Statistics")}function showInterviewStats(){const e=dataManager.getStatistics(),t=dataManager.getAllParticipants().filter(e=>e.interviews&&e.interviews.length>0),i=`\nInterview Statistics:\n• Total Interviews Completed: ${e.totalInterviews}\n• Participants with Interviews: ${t.length}\n• Average Interviews per Participant: ${t.length?(e.totalInterviews/t.length).toFixed(1):0}\n• Total Sessions: ${e.totalSessions}\n  `;app.dialog.alert(i,"Interview Statistics")}function showDebriefStats(){const e=dataManager.getAllParticipants(),t=`\nDebriefing Statistics:\n• Total Debrief Sessions: ${e.reduce((e,t)=>e+(t.debriefs?t.debriefs.length:0),0)}\n• Participants with Debriefs: ${e.filter(e=>e.debriefs&&e.debriefs.length>0).length}\n• Research Quality Tracking: Active\n  `;app.dialog.alert(t,"Debriefing Statistics")}const eligibilityCriteria={patients:[{text:"Aged 18 years or older",required:!0},{text:"Clinically diagnosed with hypertension (≥6 months)",required:!0,comment:"Confirm via clinic records"},{text:"Currently using conventional and/or herbal treatments",required:!0},{text:"Owns or has regular access to a smartphone",required:!0},{text:"Willing to participate in digital N-of-1 trial",required:!0},{text:"Able to provide informed consent",required:!0}],clinicians:[{text:"Aged 18 years or older",required:!0},{text:"Registered/licensed medical professional in Ghana",required:!0},{text:"≥6 months experience managing hypertensive patients",required:!0},{text:"Located in Eastern Region and currently practicing",required:!0},{text:"Comfortable with digital or mobile platforms",required:!0},{text:"Willing to participate in interviews/workshops",required:!0},{text:"Able to provide informed consent",required:!0}],herbalists:[{text:"Aged 18 years or older",required:!0},{text:"Identifies as a traditional/herbal practitioner",required:!0},{text:"≥6 months experience treating hypertension",required:!0},{text:"Located in Eastern Region and serving local clients",required:!0},{text:"Open to discussing treatment practices in research setting",required:!0},{text:"Willing to engage in co-design or interviews",required:!0},{text:"Able to provide informed consent",required:!0}],"policy-stakeholders":[{text:"Aged 18 years or older",required:!0},{text:"Holds a relevant role in policy, regulation, or planning",required:!0},{text:"Currently active in Ghana's health or NCD-related sectors",required:!0},{text:"Familiar with digital health, innovation, or NCD policy",required:!0},{text:"Willing to participate in stakeholder dialogue",required:!0},{text:"Able to provide informed consent",required:!0}]},interviewGuides={patients:{objective:"Understand patients' experiences, treatment behaviours, and perspectives on integrating conventional and herbal care.",domains:[{title:"Diagnosis Experience",questions:["Can you tell me the story of how you were diagnosed with hypertension?"]},{title:"Treatment History",questions:["What treatments have you used since diagnosis (e.g., clinic drugs, herbs, others)?"]},{title:"Perceptions and Beliefs",questions:["How do you view your current treatment?","What do you believe causes or worsens BP?"]},{title:"Integration Perspectives",questions:["Would you be open to trying combined or personalised approaches (herbs + clinic)?"]},{title:"Daily Routines & Challenges",questions:["How do you manage taking your medications?","Any difficulties or support received?"]}]},clinicians:{objective:"Explore professional insights on treatment practices, patient behaviours, and openness to integrative strategies.",domains:[{title:"Current Practice",questions:["What are your common treatment approaches for hypertension patients?"]},{title:"Observed Patient Behaviour",questions:["What patterns have you noticed in patient adherence or use of alternative therapies?"]},{title:"Attitudes Toward Integration",questions:["How do you feel about integrating herbal or lifestyle interventions into treatment?"]},{title:"System Constraints",questions:["What health system barriers limit personalised or holistic care?"]},{title:"Digital Readiness",questions:["Would you be open to digital tools (e.g., N-of-1 platforms) to track treatment?"]}]},herbalists:{objective:"Capture knowledge of herbal care practices, patient patterns, and attitudes toward collaboration with biomedical care.",domains:[{title:"Common Treatments Used",questions:["Which herbs or remedies do you commonly use for managing high blood pressure?"]},{title:"Client Demographics",questions:["Who are the people that come to you?","What do they usually report?"]},{title:"Integration Readiness",questions:["Would you be willing to work with clinics or hospitals in a shared care model?"]},{title:"Beliefs About Conventional Care",questions:["What are your views on hospital-based hypertension treatment?"]},{title:"Openness to Digital Tools",questions:["Would you be open to recording patient data or participating in a digital study?"]}]},caregivers:{objective:"Understand the role of caregivers in supporting hypertensive patients and their beliefs about treatment.",domains:[{title:"Care Role",questions:["What kind of support do you provide to the person with hypertension?"]},{title:"Medication & Monitoring",questions:["Do you help with reminders or observing their medication or symptoms?"]},{title:"Beliefs About Treatment",questions:["What are your thoughts on using clinic medicines versus herbs or spiritual help?"]},{title:"Experience with Health System",questions:["Have you had interactions with health workers or herbalists for your relative?"]},{title:"Attitude Toward Integration",questions:["Would you support trying both hospital and herbal treatments if advised?"]}]}};function navigateToPage(e){app.views.main?app.views.main.router.navigate(e):console.error("Main view not initialized")}function goBack(){app.views.main&&app.views.main.router.back()}function initializeEligibilityPage(){console.log("Initializing eligibility page..."),loadStakeholderTypes()}function initializeInterviewPage(){console.log("Initializing interview page..."),loadInterviewGuides(),setupAudioRecording()}function initializeDataEntryPage(){console.log("Initializing data entry page..."),loadParticipantList()}function initializeViewRecordsPage(){console.log("Initializing view records page..."),loadAllRecords()}function setupAudioRecording(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)||(console.error("Audio recording not supported in this browser"),!1)}function startAudioRecording(){return audioRecorder.startRecording()}function stopAudioRecording(){audioRecorder.stopRecording()}function loadStakeholderTypes(){const e=document.getElementById("stakeholderType");if(e){const t=[{value:"patients",label:"Patients"},{value:"clinicians",label:"Clinicians"},{value:"herbalists",label:"Herbalists"},{value:"policy-stakeholders",label:"Policy Stakeholders"},{value:"caregivers",label:"Caregivers"}];e.innerHTML='<option value="">Select Stakeholder Type</option>',t.forEach(t=>{const i=document.createElement("option");i.value=t.value,i.textContent=t.label,e.appendChild(i)})}}function loadInterviewGuides(){console.log("Interview guides loaded")}function loadParticipantList(){const e=dataManager.getParticipants(),t=document.getElementById("participantSelect");t&&(t.innerHTML='<option value="">Select Participant</option>',e.forEach(e=>{const i=document.createElement("option");i.value=e.id,i.textContent=`${e.id} - ${e.stakeholderType}`,t.appendChild(i)}))}function loadAllRecords(){const e=dataManager.getParticipants(),t=dataManager.getInterviews(),i=dataManager.getAudioFiles();console.log("Loaded records:",{participants:e.length,interviews:t.length,audioFiles:i.length})}function exportAllData(){try{dataManager.exportData("json"),app.toast.create({text:"Data exported successfully!",position:"bottom",closeTimeout:3e3}).open()}catch(e){console.error("Export error:",e),app.toast.create({text:"Failed to export data",position:"bottom",closeTimeout:3e3}).open()}}function exportCSVData(){try{const e={participants:dataManager.getParticipants(),interviews:dataManager.getInterviews(),audioFiles:dataManager.getAudioFiles(),fieldLogs:dataManager.getFieldLogs()};dataManager.exportCSV(e),app.toast.create({text:"CSV files exported successfully!",position:"bottom",closeTimeout:3e3}).open()}catch(e){console.error("CSV export error:",e),app.toast.create({text:"Failed to export CSV files",position:"bottom",closeTimeout:3e3}).open()}}function simpleNavigate(e){window.location.href=e}function submitEligibilityForm(e){e.preventDefault();const t=new FormData(e.target),i=Object.fromEntries(t.entries());try{const t=dataManager.saveParticipant(i);app.toast.create({text:`Participant ${t.id} saved successfully!`,position:"bottom",closeTimeout:3e3}).open(),e.target.reset()}catch(e){console.error("Error saving participant:",e),app.toast.create({text:"Failed to save participant data",position:"bottom",closeTimeout:3e3}).open()}}function submitInterviewData(e){e.preventDefault();const t=new FormData(e.target),i=Object.fromEntries(t.entries());try{const t=dataManager.saveInterview(i);app.toast.create({text:`Interview ${t.id} saved successfully!`,position:"bottom",closeTimeout:3e3}).open(),e.target.reset()}catch(e){console.error("Error saving interview:",e),app.toast.create({text:"Failed to save interview data",position:"bottom",closeTimeout:3e3}).open()}}let isRecording=!1,recordingStartTime=null;function toggleRecording(){isRecording?stopRecording():startRecording()}function startRecording(){setupAudioRecording()&&audioRecorder.startRecording().then(e=>{e?(isRecording=!0,recordingStartTime=Date.now(),updateRecordingUI(!0),app.toast.create({text:"Recording started",position:"bottom",closeTimeout:2e3}).open()):app.toast.create({text:"Failed to start recording",position:"bottom",closeTimeout:3e3}).open()})}function stopRecording(){if(isRecording){audioRecorder.stopRecording(),isRecording=!1,updateRecordingUI(!1);const e=recordingStartTime?(Date.now()-recordingStartTime)/1e3:0;app.toast.create({text:`Recording stopped (${e.toFixed(1)}s)`,position:"bottom",closeTimeout:3e3}).open()}}function updateRecordingUI(e){const t=document.getElementById("recordButton"),i=document.getElementById("recordIcon"),n=document.getElementById("recordText");t&&t.classList.toggle("recording",e),i&&(i.textContent=e?"stop":"mic"),n&&(n.textContent=e?"Stop Recording":"Start Recording")}function handlePageInit(e){switch(console.log(`Page initialized: ${e}`),e){case"eligibility-checklist":initializeEligibilityPage();break;case"interview-guide":initializeInterviewPage();break;case"data-entry":initializeDataEntryPage();break;case"view-records":initializeViewRecordsPage();break;case"audio-log":window.audioLibrary&&window.audioLibrary.initialize()}}function showSuccess(e){app.toast.create({text:e,position:"bottom",closeTimeout:3e3}).open()}function showError(e){app.toast.create({text:e,position:"bottom",closeTimeout:3e3}).open()}document.addEventListener("page:init",function(e){handlePageInit(e.detail.name)}),document.addEventListener("DOMContentLoaded",function(){console.log("Initializing QualiData application..."),app.views.main||app.views.create(".view-main",{url:"/"}),updateStats(),updateStatistics(),setInterval(()=>{updateStats(),updateStatistics()},5e3),"serviceWorker"in navigator&&navigator.serviceWorker.register("./service-worker.js").then(function(e){console.log("ServiceWorker registration successful")}).catch(function(e){console.log("ServiceWorker registration failed")}),console.log("QualiData application initialization complete")}),window.app=app,window.mainView=mainView,window.dataManager=dataManager,window.audioRecorder=audioRecorder,window.eligibilityCriteria=eligibilityCriteria,window.interviewGuides=interviewGuides,window.updateStats=updateStats,window.updateStatistics=updateStatistics,window.updateHeroStats=updateHeroStats,window.showScreeningStats=showScreeningStats,window.showInterviewStats=showInterviewStats,window.showDebriefStats=showDebriefStats,window.navigateToPage=navigateToPage,window.goBack=goBack,window.startAudioRecording=startAudioRecording,window.stopAudioRecording=stopAudioRecording,window.exportAllData=exportAllData,window.exportCSVData=exportCSVData,window.initializeEligibilityPage=initializeEligibilityPage,window.initializeInterviewPage=initializeInterviewPage,window.initializeDataEntryPage=initializeDataEntryPage,window.initializeViewRecordsPage=initializeViewRecordsPage,window.simpleNavigate=simpleNavigate,window.submitEligibilityForm=submitEligibilityForm,window.submitInterviewData=submitInterviewData,window.toggleRecording=toggleRecording,window.startRecording=startRecording,window.stopRecording=stopRecording,window.showSuccess=showSuccess,window.showError=showError,window.handlePageInit=handlePageInit;